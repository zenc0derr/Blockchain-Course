{
  "address": "0x6DAe93FD752D8B864759df17A38F083Cc59E79e2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x94379ec76fa4fdef86c907f6dd14bbdc3a17f40fc774d408d3512249ed25b519",
  "receipt": {
    "to": null,
    "from": "0xD7ae691825CBD91981846E0C0aDB77641Bed3769",
    "contractAddress": "0x6DAe93FD752D8B864759df17A38F083Cc59E79e2",
    "transactionIndex": 15,
    "gasUsed": "1015624",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xbebff85ca0fc3a1b40e5cc364d52fd2ac53ab722b1217609f67fe64a0070fcf1",
    "transactionHash": "0x94379ec76fa4fdef86c907f6dd14bbdc3a17f40fc774d408d3512249ed25b519",
    "logs": [],
    "blockNumber": 8559396,
    "cumulativeGasUsed": "11678687",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "29ab7c6168a3812167514ccd0f2dea51",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tejesh Kumar\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract to receive Funds\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Demo\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get Funds from Users\\n//Withdraw Funds\\n//Set Minimum Funding Values in USD\\n\\n// SPDX-License-Identifier: MIT\\n//Pragma\\npragma solidity ^0.8.8;\\n\\n//Imports\\nimport \\\"./PriceConvertor.sol\\\";\\n\\n//Error Codes\\n\\n//Interfaces or Libraries\\n\\n//Contract\\n\\n/// @title A contract to receive Funds\\n/// @author Tejesh Kumar\\n/// @notice Demo\\ncontract FundMe {\\n\\n    //Type Declaractions\\n    using PriceConvertor for uint256;\\n\\n    //State Variables   \\n    uint256 public constant minimumUSD = 50 * 1e18;\\n\\n    address[] public funders; \\n    mapping(address => uint256) public addressToAmountFunder;\\n\\n    address public owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    uint256 public x;\\n\\n    constructor(address priceFeedAddress){\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    } \\n\\n    //function to send money\\n    function fund() public payable{\\n        x = msg.value.getConversionRate(priceFeed);\\n        require(msg.value.getConversionRate(priceFeed)>= minimumUSD, \\\"Didn't Send Enough\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunder[msg.sender] = msg.value;\\n    }\\n\\n    \\n\\n    function withdraw() public onlyOwner{\\n        \\n\\n        for(uint256 funderIndex = 0; funderIndex <funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunder[funder] = 0;\\n\\n        }\\n\\n        funders = new address[] (0);\\n\\n        //msg.sender -> address\\n        //payable(msg.sender) -> payable address\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send Failed\\\");\\n\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");    \\n        require(callSuccess, \\\"Call Failed\\\");\\n\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner{\\n        address[] memory funders2 = funders;\\n        for(uint256 funderIndex = 0; funderIndex <funders2.length; funderIndex++){\\n            address funder = funders2[funderIndex];\\n            addressToAmountFunder[funder] = 0;\\n        }\\n\\n        funders = new address[] (0);\\n\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");    \\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        require(msg.sender == owner, \\\"Not Owner\\\");\\n        _; // do rest of the code\\n    }\\n}\",\"keccak256\":\"0x9d1e64d62851e8a0f5ec8c185fef82700bc8cead87a02e75350e2d5e23ff1f2f\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\nlibrary PriceConvertor{\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n\\n        (,int256 price,,,) = priceFeed.latestRoundData(); // Price of ETH in term of USD;\\n        return uint256(price);\\n    }\\n        \\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmounInUSD = (ethPrice*ethAmount) / 1e8;\\n        return ethAmounInUSD;\\n    }\\n}\",\"keccak256\":\"0xbe12dcdcc8b0b2dcaedfec05b17eedecf08e6ede740fa4d2f315a8efccf03b25\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012023803806200120283398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611096806200016c6000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b14610123578063b60d42881461014e578063be2693f014610158578063c20089f41461016f578063dc0d3dff146101ac57610086565b80630c55699c1461008b5780633430a88c146100b65780633ccfd60b146100e1578063741bef1a146100f8575b600080fd5b34801561009757600080fd5b506100a06101e9565b6040516100ad9190610a85565b60405180910390f35b3480156100c257600080fd5b506100cb6101ef565b6040516100d89190610a85565b60405180910390f35b3480156100ed57600080fd5b506100f66101fc565b005b34801561010457600080fd5b5061010d610447565b60405161011a9190610b1f565b60405180910390f35b34801561012f57600080fd5b5061013861046d565b6040516101459190610b5b565b60405180910390f35b610156610493565b005b34801561016457600080fd5b5061016d6105f7565b005b34801561017b57600080fd5b5061019660048036038101906101919190610ba7565b6108a6565b6040516101a39190610a85565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce9190610c00565b6108be565b6040516101e09190610b5b565b60405180910390f35b60045481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028390610c8a565b60405180910390fd5b60005b6000805490508110156103375760008082815481106102b1576102b0610caa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032f90610d08565b91505061028f565b50600067ffffffffffffffff81111561035357610352610d51565b5b6040519080825280602002602001820160405280156103815781602001602082028036833780820191505090505b50600090805190602001906103979291906109c5565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103be90610db1565b60006040518083038185875af1925050503d80600081146103fb576040519150601f19603f3d011682016040523d82523d6000602084013e610400565b606091505b5050905080610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610e12565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104c8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fd90919063ffffffff16565b6004819055506802b5e3af16b188000061050d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fd90919063ffffffff16565b101561054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590610e7e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610c8a565b60405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561070a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c0575b5050505050905060005b815181101561079557600082828151811061073257610731610caa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078d90610d08565b915050610714565b50600067ffffffffffffffff8111156107b1576107b0610d51565b5b6040519080825280602002602001820160405280156107df5781602001602082028036833780820191505090505b50600090805190602001906107f59291906109c5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161081c90610db1565b60006040518083038185875af1925050503d8060008114610859576040519150601f19603f3d011682016040523d82523d6000602084013e61085e565b606091505b50509050806108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089990610e12565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b600081815481106108ce57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061090983610935565b905060006305f5e100858361091e9190610e9e565b6109289190610f27565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097e57600080fd5b505afa158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fe5565b50505091505080915050919050565b828054828255906000526020600020908101928215610a3e579160200282015b82811115610a3d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e5565b5b509050610a4b9190610a4f565b5090565b5b80821115610a68576000816000905550600101610a50565b5090565b6000819050919050565b610a7f81610a6c565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ae5610ae0610adb84610aa0565b610ac0565b610aa0565b9050919050565b6000610af782610aca565b9050919050565b6000610b0982610aec565b9050919050565b610b1981610afe565b82525050565b6000602082019050610b346000830184610b10565b92915050565b6000610b4582610aa0565b9050919050565b610b5581610b3a565b82525050565b6000602082019050610b706000830184610b4c565b92915050565b600080fd5b610b8481610b3a565b8114610b8f57600080fd5b50565b600081359050610ba181610b7b565b92915050565b600060208284031215610bbd57610bbc610b76565b5b6000610bcb84828501610b92565b91505092915050565b610bdd81610a6c565b8114610be857600080fd5b50565b600081359050610bfa81610bd4565b92915050565b600060208284031215610c1657610c15610b76565b5b6000610c2484828501610beb565b91505092915050565b600082825260208201905092915050565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b6000610c74600983610c2d565b9150610c7f82610c3e565b602082019050919050565b60006020820190508181036000830152610ca381610c67565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1382610a6c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4657610d45610cd9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d9b600083610d80565b9150610da682610d8b565b600082019050919050565b6000610dbc82610d8e565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dfc600b83610c2d565b9150610e0782610dc6565b602082019050919050565b60006020820190508181036000830152610e2b81610def565b9050919050565b7f4469646e27742053656e6420456e6f7567680000000000000000000000000000600082015250565b6000610e68601283610c2d565b9150610e7382610e32565b602082019050919050565b60006020820190508181036000830152610e9781610e5b565b9050919050565b6000610ea982610a6c565b9150610eb483610a6c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eed57610eec610cd9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3282610a6c565b9150610f3d83610a6c565b925082610f4d57610f4c610ef8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7781610f58565b8114610f8257600080fd5b50565b600081519050610f9481610f6e565b92915050565b6000819050919050565b610fad81610f9a565b8114610fb857600080fd5b50565b600081519050610fca81610fa4565b92915050565b600081519050610fdf81610bd4565b92915050565b600080600080600060a0868803121561100157611000610b76565b5b600061100f88828901610f85565b955050602061102088828901610fbb565b945050604061103188828901610fd0565b935050606061104288828901610fd0565b925050608061105388828901610f85565b915050929550929590935056fea264697066735822122083e87dd5c82f823f4b49e6aa904a729b8b2a93545f946b9e5a3241a71bd4e67864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b14610123578063b60d42881461014e578063be2693f014610158578063c20089f41461016f578063dc0d3dff146101ac57610086565b80630c55699c1461008b5780633430a88c146100b65780633ccfd60b146100e1578063741bef1a146100f8575b600080fd5b34801561009757600080fd5b506100a06101e9565b6040516100ad9190610a85565b60405180910390f35b3480156100c257600080fd5b506100cb6101ef565b6040516100d89190610a85565b60405180910390f35b3480156100ed57600080fd5b506100f66101fc565b005b34801561010457600080fd5b5061010d610447565b60405161011a9190610b1f565b60405180910390f35b34801561012f57600080fd5b5061013861046d565b6040516101459190610b5b565b60405180910390f35b610156610493565b005b34801561016457600080fd5b5061016d6105f7565b005b34801561017b57600080fd5b5061019660048036038101906101919190610ba7565b6108a6565b6040516101a39190610a85565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce9190610c00565b6108be565b6040516101e09190610b5b565b60405180910390f35b60045481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028390610c8a565b60405180910390fd5b60005b6000805490508110156103375760008082815481106102b1576102b0610caa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032f90610d08565b91505061028f565b50600067ffffffffffffffff81111561035357610352610d51565b5b6040519080825280602002602001820160405280156103815781602001602082028036833780820191505090505b50600090805190602001906103979291906109c5565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103be90610db1565b60006040518083038185875af1925050503d80600081146103fb576040519150601f19603f3d011682016040523d82523d6000602084013e610400565b606091505b5050905080610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610e12565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104c8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fd90919063ffffffff16565b6004819055506802b5e3af16b188000061050d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fd90919063ffffffff16565b101561054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590610e7e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610c8a565b60405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561070a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c0575b5050505050905060005b815181101561079557600082828151811061073257610731610caa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078d90610d08565b915050610714565b50600067ffffffffffffffff8111156107b1576107b0610d51565b5b6040519080825280602002602001820160405280156107df5781602001602082028036833780820191505090505b50600090805190602001906107f59291906109c5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161081c90610db1565b60006040518083038185875af1925050503d8060008114610859576040519150601f19603f3d011682016040523d82523d6000602084013e61085e565b606091505b50509050806108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089990610e12565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b600081815481106108ce57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061090983610935565b905060006305f5e100858361091e9190610e9e565b6109289190610f27565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097e57600080fd5b505afa158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fe5565b50505091505080915050919050565b828054828255906000526020600020908101928215610a3e579160200282015b82811115610a3d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e5565b5b509050610a4b9190610a4f565b5090565b5b80821115610a68576000816000905550600101610a50565b5090565b6000819050919050565b610a7f81610a6c565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ae5610ae0610adb84610aa0565b610ac0565b610aa0565b9050919050565b6000610af782610aca565b9050919050565b6000610b0982610aec565b9050919050565b610b1981610afe565b82525050565b6000602082019050610b346000830184610b10565b92915050565b6000610b4582610aa0565b9050919050565b610b5581610b3a565b82525050565b6000602082019050610b706000830184610b4c565b92915050565b600080fd5b610b8481610b3a565b8114610b8f57600080fd5b50565b600081359050610ba181610b7b565b92915050565b600060208284031215610bbd57610bbc610b76565b5b6000610bcb84828501610b92565b91505092915050565b610bdd81610a6c565b8114610be857600080fd5b50565b600081359050610bfa81610bd4565b92915050565b600060208284031215610c1657610c15610b76565b5b6000610c2484828501610beb565b91505092915050565b600082825260208201905092915050565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b6000610c74600983610c2d565b9150610c7f82610c3e565b602082019050919050565b60006020820190508181036000830152610ca381610c67565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1382610a6c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4657610d45610cd9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d9b600083610d80565b9150610da682610d8b565b600082019050919050565b6000610dbc82610d8e565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dfc600b83610c2d565b9150610e0782610dc6565b602082019050919050565b60006020820190508181036000830152610e2b81610def565b9050919050565b7f4469646e27742053656e6420456e6f7567680000000000000000000000000000600082015250565b6000610e68601283610c2d565b9150610e7382610e32565b602082019050919050565b60006020820190508181036000830152610e9781610e5b565b9050919050565b6000610ea982610a6c565b9150610eb483610a6c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eed57610eec610cd9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3282610a6c565b9150610f3d83610a6c565b925082610f4d57610f4c610ef8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7781610f58565b8114610f8257600080fd5b50565b600081519050610f9481610f6e565b92915050565b6000819050919050565b610fad81610f9a565b8114610fb857600080fd5b50565b600081519050610fca81610fa4565b92915050565b600081519050610fdf81610bd4565b92915050565b600080600080600060a0868803121561100157611000610b76565b5b600061100f88828901610f85565b955050602061102088828901610fbb565b945050604061103188828901610fd0565b935050606061104288828901610fd0565b925050608061105388828901610f85565b915050929550929590935056fea264697066735822122083e87dd5c82f823f4b49e6aa904a729b8b2a93545f946b9e5a3241a71bd4e67864736f6c63430008080033",
  "devdoc": {
    "author": "Tejesh Kumar",
    "kind": "dev",
    "methods": {},
    "title": "A contract to receive Funds",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Demo",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunder",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "x",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}